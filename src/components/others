 {/* <Routes >
        <Route path='/' element={<Home />} />
        <Route path='/about' element={<About />} />
        <Route path='/newpost' element={<NewPost />} />
        <Route path='/postlayout' element={<PostLayout />} >
          <Route index element={<PostPage />} />
          <Route path=':id' element={<Post />} />          
          <Route path='newpost' element={<NewPost />} />
        </Route>
        <Route path='/*' element={<Missing />} /> */}
        {/* <Route path='/footer' element={<Footer />} /> */}
      {/* </Routes> */}

      
      useEffect(()=>{ 
        const fetchPosts = async () => {
          try {
            const response = await api.get('/posts');
            setPosts(response.data);
          } catch (err) {
            if(err.response) {
              // Not in the 200 response range
              console.log(err.response.data);
              console.log(err.response.status);
              console.log(err.response.headers);
            } else {
              console.log(`Error : ${err.message}`);
            }
          }
        }
        fetchPosts()
      }, []);
   
        z
      <main className='PostPage'>
      <article className="post">
        {post && 
          <>
            <h2>{post.title}</h2>
            <p className="postDate">{post.postdate}</p>
            <p className="editBody">{post.editBody}</p>
            <button className='editButton' onClick={()=>handleEdit(post.id)}>Edit Post</button>
            <button className='deleteButton' onClick={()=>handleDelete(post.id)}>Delete Post</button>
          </>
        }
        {!post && 
          <>
            <h2>Page Not Found</h2>
            <p>Well, that's dissappointing</p>
            <p><Link to='/' >visit Our Homepage</Link></p>
          </>
        }
      </article>
    </main>
    const [windowSize, setWindowSize] = useState({
      width: isClient ? window.innerWidth : initialWidth,
      height: isClient ? window.innerHeight : initialHeight,
    });